use rusty_machine::linalg::Matrix;
use rusty_machine::linalg::Vector;
use rusty_machine::learning::SupModel;
use rusty_machine::learning::lin_reg::LinRegressor;

use test::{Bencher, black_box};

pub fn generate_data() -> (Matrix<f64>, Vector<f64>) {
    // Training data (Seatbelts dataset from R's datasets library)
    let data = Matrix::new(60,4,vec![1687.0,867.0,269.0,9059.0,  1508.0,825.0,265.0,7685.0,  1507.0,806.0,319.0,9963.0,  1385.0,814.0,407.0,10955.0,  1632.0,991.0,454.0,11823.0,  1511.0,945.0,427.0,12391.0,  1559.0,1004.0,522.0,13460.0,  1630.0,1091.0,536.0,14055.0,  1579.0,958.0,405.0,12106.0,  1653.0,850.0,437.0,11372.0,  2152.0,1109.0,434.0,9834.0,  2148.0,1113.0,437.0,9267.0,  1752.0,925.0,316.0,9130.0,  1765.0,903.0,311.0,8933.0,  1717.0,1006.0,351.0,11000.0,  1558.0,892.0,362.0,10733.0,  1575.0,990.0,486.0,12912.0,  1520.0,866.0,429.0,12926.0,  1805.0,1095.0,551.0,13990.0,  1800.0,1204.0,646.0,14926.0,  1719.0,1029.0,456.0,12900.0,  2008.0,1147.0,475.0,12034.0,  2242.0,1171.0,456.0,10643.0,  2478.0,1299.0,468.0,10742.0,  2030.0,944.0,356.0,10266.0,  1655.0,874.0,271.0,10281.0,  1693.0,840.0,354.0,11527.0,  1623.0,893.0,427.0,12281.0,  1805.0,1007.0,465.0,13587.0,  1746.0,973.0,440.0,13049.0,  1795.0,1097.0,539.0,16055.0,  1926.0,1194.0,646.0,15220.0,  1619.0,988.0,457.0,13824.0,  1992.0,1077.0,446.0,12729.0,  2233.0,1045.0,402.0,11467.0,  2192.0,1115.0,441.0,11351.0,  2080.0,1005.0,359.0,10803.0,  1768.0,857.0,334.0,10548.0,  1835.0,879.0,312.0,12368.0,  1569.0,887.0,427.0,13311.0,  1976.0,1075.0,434.0,13885.0,  1853.0,1121.0,486.0,14088.0,  1965.0,1190.0,569.0,16932.0,  1689.0,1058.0,523.0,16164.0,  1778.0,939.0,418.0,14883.0,  1976.0,1074.0,452.0,13532.0,  2397.0,1089.0,462.0,12220.0,  2654.0,1208.0,497.0,12025.0,  2097.0,903.0,354.0,11692.0,  1963.0,916.0,347.0,11081.0,  1677.0,787.0,276.0,13745.0,  1941.0,1114.0,472.0,14382.0,  2003.0,1014.0,487.0,14391.0,  1813.0,1022.0,505.0,15597.0,  2012.0,1114.0,619.0,16834.0,  1912.0,1132.0,640.0,17282.0,  2084.0,1111.0,559.0,15779.0,  2080.0,1008.0,453.0,13946.0,  2118.0,916.0,418.0,12701.0,  2150.0,992.0,419.0,10431.0]);

    let target = Vector::new(vec![107.0,97.0,102.0,87.0,  119.0,  106.0,  110.0,  106.0,  107.0,  134.0,  147.0,  180.0,  125.0,  134.0,  110.0,  102.0,  103.0,  111.0,  120.0,  129.0,  122.0,  183.0,  169.0,  190.0,  134.0,  108.0,  104.0,  117.0,  157.0,  148.0,  130.0,  140.0,  136.0,  140.0,  187.0,  150.0,  159.0,  143.0,  114.0,  127.0,  159.0,  156.0,  138.0,  120.0,  117.0,  170.0,  168.0,  198.0,  144.0,  146.0,  109.0,  131.0,  151.0,  140.0,  153.0,  140.0,  161.0,  168.0,  152.0,  136.0]);

    (data,target)
}

#[bench]
fn lin_reg_train_default(b: &mut Bencher) {
    let (data, target) = generate_data();

    // Trainee
    b.iter(|| {
        let mut lin_mod = LinRegressor::default();;
        let _ = black_box(lin_mod.train(&data,&target).unwrap());
    });
}

#[bench]
fn lin_reg_train_qr(b: &mut Bencher) {
    let (data, target) = generate_data();

    // Trainee
    b.iter(|| {
        let mut lin_mod = LinRegressor::default();;
        let _ = black_box(lin_mod.train_with_qr(&data,&target).unwrap());
    });
}
